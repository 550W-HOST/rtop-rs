# configuration for https://github.com/sagiegurari/cargo-make

[config]
skip_core_tasks = true

[env]
# all features except the backend ones
ALL_FEATURES = ""
ALL_FEATURES_FLAG = ""

[tasks.default]
alias = "ci"

[tasks.ci]
description = "Run continuous integration tasks"
dependencies = ["lint-style", "clippy", "check", "test"]

[tasks.lint-style]
description = "Lint code style (formatting, typos, docs)"
dependencies = ["lint-format", "lint-typos", "lint-docs"]

[tasks.lint-format]
description = "Lint code formatting"
toolchain = "nightly"
command = "cargo"
args = ["fmt", "--all", "--check"]

[tasks.format]
description = "Fix code formatting"
toolchain = "nightly"
command = "cargo"
args = ["fmt", "--all"]

[tasks.lint-typos]
description = "Run typo checks"
install_crate = { crate_name = "typos-cli", binary = "typos", test_arg = "--version" }
command = "typos"

[tasks.lint-docs]
description = "Check documentation for errors and warnings"
toolchain = "nightly"
command = "cargo"
args = [
    "rustdoc",
    "--no-default-features",
    "--",
    "-Zunstable-options",
    "--check",
]

[tasks.check]
description = "Check code for errors and warnings"
command = "cargo"
args = ["check", "--all-targets", "--no-default-features"]

[tasks.build]
description = "Compile the project"
command = "cargo"
args = ["build", "--all-targets", "--no-default-features"]

[tasks.clippy]
description = "Run Clippy for linting"
command = "cargo"
args = [
    "clippy",
    "--all-targets",
    "--tests",
    "--benches",
    "--no-default-features",
    "--",
    "-D",
    "warnings",
]

[tasks.test]
description = "Run tests"
dependencies = ["test-doc"]
command = "cargo"
args = ["test", "--all-targets", "--no-default-features"]

[tasks.test-doc]
description = "Run documentation tests"
command = "cargo"
args = ["test", "--doc", "--no-default-features"]

[tasks.test-backend]
# takes a command line parameter to specify the backend to test (e.g. "crossterm")
description = "Run backend-specific tests"
command = "cargo"
args = ["test", "--all-targets", "--no-default-features"]

[tasks.coverage]
description = "Generate code coverage report"
command = "cargo"
args = [
    "llvm-cov",
    "--lcov",
    "--output-path",
    "target/lcov.info",
    "--no-default-features",
]
